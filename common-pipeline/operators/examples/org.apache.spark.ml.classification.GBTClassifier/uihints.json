{
  "id": "org.apache.spark.ml.classification.GBTClassifier",
  "icon": "images/modelbuildspark.svg",
  "label": {
    "default": "Gradient Boosted Tree Classifier"
  },
  "description": {
    "default": "Fit a Gradient Boosted Tree Classifier Model"
  },
  "parameter_info": [
    {
      "name": "targetField",
      "label": {
        "default": "Target column"
      },
      "description": {
        "default": "Select a target column"
      }
    },
    {
      "name": "inputFieldList",
      "label": {
        "default": "Input columns"
      },
      "description": {
        "default": "Select one or more input columns"
      }
    },
    {
      "name": "checkpointInterval",
      "label": {
        "default": "Checkpoint Interval"
      },
      "description": {
        "default": "Set checkpoint interval (>= 1) or disable checkpoint (-1). Ex) 10 means that the cache will get checkpointed every 10 iterations"
      }
    },
    {
      "name": "impurity",
      "label": {
        "default": "Impurity"
      },
      "description": {
        "default": "Criterion used for information gain calculation (case-insensitive). Supported: \"entropy\" and \"gini\""
      }
    },
    {
      "name": "lossType",
      "label": {
        "default": "Loss Type"
      },
      "description": {
        "default": "Loss function which GBT tries to minimize"
      }
    },
    {
      "name": "maxBins",
      "label": {
        "default": "Maximum number of bins"
      },
      "description": {
        "default": "Maximum number of bins used for discretizing continuous features and for choosing how to split on features at each node. More bins give higher granularity. Must be >= 2 and >= number of categories in any categorical feature"
      }
    },
    {
      "name": "maxDepth",
      "label": {
        "default": "Maximum depth of the tree"
      },
      "description": {
        "default": "Maximum depth of the tree (>= 0). Ex) depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes"
      }
    },
    {
      "name": "maxIter",
      "label": {
        "default": "Maximum iterations for convergence"
      },
      "description": {
        "default": "Maximum iterations for convergence (>= 0)"
      }
    },
    {
      "name": "minInfoGain",
      "label": {
        "default": "Minimum information gain"
      },
      "description": {
        "default": "Minimum information gain for a split to be considered at a tree node"
      }
    },
    {
      "name": "minInstancesPerNode",
      "label": {
        "default": "Minimum instances per node"
      },
      "description": {
        "default": "Minimum number of instances each child must have after split. If a split causes the left or right child to have fewer than minInstancesPerNode, the split will be discarded as invalid (>= 1)"
      }
    },
    {
      "name": "seed",
      "label": {
        "default": "Seed"
      },
      "description": {
        "default": "Random seed"
      },
      "number_generator": {
        "label": {
          "default": "Generate",
          "resource_key": "numberGenerator"
        },
        "range": {
          "min": 1000000,
          "max": 9999999
        }
      }
    },
    {
      "name": "stepSize",
      "label": {
        "default": "Step size"
      },
      "description": {
        "default": "Step size to be used for each iteration of optimization"
      }
    },
    {
      "name": "subsamplingRate",
      "label": {
        "default": "Subsampling Rate"
      },
      "description": {
        "default": "Fraction of the training data used for learning each decision tree (> 0 and <= 1)"
      }
    }
  ],
  "group_info": [
    {
      "name": "fields_settings",
      "type": "panels",
      "group_info": [
        {
          "name": "fields",
          "type": "fieldSelection",
          "label": {
            "default": "Fields"
          },
          "parameters": [
            "targetField",
            "inputFieldList"
          ]
        }
      ]
    },
    {
      "name": "advancedParams",
      "label": {
        "default": "Advanced Parameters"
      },
      "parameters": [
        "checkpointInterval",
        "impurity",
        "lossType",
        "maxBins",
        "maxDepth",
        "maxIter",
        "minInfoGain",
        "minInstancesPerNode",
        "seed",
        "stepSize",
        "subsamplingRate"
      ]
    }
  ],
  "conditions": [
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focusParam": "inputFieldList",
          "message": {
            "resource_key": "input_field_list_not_empty"
          }
        },
        "evaluate": {
          "condition": {
            "param": "inputFieldList",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focusParam": "targetField",
          "message": {
            "resource_key": "target_field_not_empty"
          }
        },
        "evaluate": {
          "condition": {
            "param": "targetField",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focusParam": "checkpointInterval",
          "message": {
            "resource_key": "checkpoint_interval_not_valid"
          }
        },
        "evaluate": {
          "or": [
            {
              "condition": {
                "param": "checkpointInterval",
                "op": "greaterThan",
                "value": 1
              }
            },
            {
              "condition": {
                "param": "checkpointInterval",
                "op": "equals",
                "value": 1
              }
            },
            {
              "condition": {
                "param": "checkpointInterval",
                "op": "equals",
                "value": -1
              }
            }
          ]
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focusParam": "maxBins",
          "message": {
            "resource_key": "max_bins_not_valid"
          }
        },
        "evaluate": {
          "or": [
            {
              "condition": {
                "param": "maxBins",
                "op": "greaterThan",
                "value": 2
              }
            },
            {
              "condition": {
                "param": "maxBins",
                "op": "equals",
                "value": 2
              }
            }
          ]
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focusParam": "maxDepth",
          "message": {
            "resource_key": "max_depth_not_valid"
          }
        },
        "evaluate": {
          "or": [
            {
              "condition": {
                "param": "maxDepth",
                "op": "greaterThan",
                "value": 0
              }
            },
            {
              "condition": {
                "param": "maxDepth",
                "op": "equals",
                "value": 0
              }
            }
          ]
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focusParam": "maxIter",
          "message": {
            "resource_key": "max_iter_not_valid"
          }
        },
        "evaluate": {
          "or": [
            {
              "condition": {
                "param": "maxIter",
                "op": "greaterThan",
                "value": 0
              }
            },
            {
              "condition": {
                "param": "maxIter",
                "op": "equals",
                "value": 0
              }
            }
          ]
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focusParam": "minInstancesPerNode",
          "message": {
            "resource_key": "min_instances_per_node_not_valid"
          }
        },
        "evaluate": {
          "or": [
            {
              "condition": {
                "param": "minInstancesPerNode",
                "op": "greaterThan",
                "value": 1
              }
            },
            {
              "condition": {
                "param": "minInstancesPerNode",
                "op": "equals",
                "value": 1
              }
            }
          ]
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focusParam": "subsamplingRate",
          "message": {
            "resource_key": "subsampling_rate_not_valid"
          }
        },
        "evaluate": {
          "and": [
            {
              "condition": {
                "param": "subsamplingRate",
                "op": "greaterThan",
                "value": 0
              }
            },
            {
              "or": [
                {
                  "condition": {
                    "param": "subsamplingRate",
                    "op": "lessThan",
                    "value": 1
                  }
                },
                {
                  "condition": {
                    "param": "subsamplingRate",
                    "op": "equals",
                    "value": 1
                  }
                }
              ]
            }
          ]
        }
      }
    }
  ]
}
